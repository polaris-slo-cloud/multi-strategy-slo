apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    component: average-cpu-utilization-metric-controller
    tier: control-plane
  name: average-cpu-utilization-metric-controller
  namespace: polaris
spec:
  selector:
    matchLabels:
      component: average-cpu-utilization-metric-controller
      tier: control-plane
  replicas: 1
  template:
    metadata:
      labels:
        component: average-cpu-utilization-metric-controller
        tier: control-plane
        polaris-controller-type: composed-metric
    spec:
      serviceAccountName: average-cpu-utilization-metric-controller
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  # Ensure that the controller is only scheduled on Intel 64-bit nodes.
                  - key: kubernetes.io/arch
                    operator: In
                    values:
                      - amd64
      tolerations:
        # Ensure that the controller can be scheduled on master nodes.
        - key: node-role.kubernetes.io/master
          operator: Exists
          effect: NoSchedule
      containers:
        - image: polarissloc/average-cpu-utilization-metric-controller:latest
          name: metrics-controller
          resources:
            limits:
              cpu: 1000m
              memory: 1Gi
          ports:
            - name: metrics
              containerPort: 3000
          securityContext:
            privileged: false
          env:
            # The hostname and port of the Prometheus service:
            - name: PROMETHEUS_HOST
              value: prometheus-kube-prometheus-prometheus.monitoring.svc
            - name: PROMETHEUS_PORT
              value: '9090'
            - name: PROMETHEUS_METRICS_ENDPOINT_PORT
              value: '3000' # If this is changed, the containerPort above needs to be changed accordingly as well.
            - name: PROMETHEUS_METRICS_ENDPOINT_PATH
              value: /metrics
            # Composed Metric computation interval in milliseconds.
            # When changing this, you might also want to change the scrape interval in 3-service-monitor.yaml.
            - name: COMPOSED_METRIC_COMPUTATION_INTERVAL_MS
              value: '20000'
            # Workaround for an issue with kubernetes-client when using IPv6 (https://github.com/kubernetes-client/javascript/issues/599)
            - name: KUBERNETES_SERVICE_HOST
              value: kubernetes.default.svc
            # Set up a 10 minute connection check interval for the ObjectKind watches.
            # This is a temporary workaround for occasional watch disconnect issues that
            # are not reported by the Kubernetes client library.
            # See https://github.com/kubernetes-client/javascript/issues/596#issuecomment-792067322
            # You can disable this check by removing this env var.
            - name: POLARIS_CONNECTION_CHECK_TIMEOUT_MS
              value: '600000'
---
apiVersion: v1
kind: Service
metadata:
  namespace: polaris
  name: average-cpu-utilization-metric-controller
  labels:
    component: average-cpu-utilization-metric-controller
    tier: control-plane
    polaris-controller-type: composed-metric
spec:
  selector:
    component: average-cpu-utilization-metric-controller
    tier: control-plane
    polaris-controller-type: composed-metric
  ports:
    - name: metrics
      port: 3000
      targetPort: metrics
